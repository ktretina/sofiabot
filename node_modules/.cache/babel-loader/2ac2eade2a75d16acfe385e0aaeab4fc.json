{"remainingRequest":"/Users/kyletretina/Desktop/SAVuegram/node_modules/babel-loader/lib/index.js!/Users/kyletretina/Desktop/SAVuegram/node_modules/eslint-loader/index.js??ref--13-0!/Users/kyletretina/Desktop/SAVuegram/src/store/index.js","dependencies":[{"path":"/Users/kyletretina/Desktop/SAVuegram/src/store/index.js","mtime":1594596189690},{"path":"/Users/kyletretina/Desktop/SAVuegram/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kyletretina/Desktop/SAVuegram/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kyletretina/Desktop/SAVuegram/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/kyletretina/Desktop/SAVuegram/src/store/index.js"],"names":["Vue","Vuex","fb","router","use","postsCollection","orderBy","onSnapshot","snapshot","postsArray","forEach","doc","post","data","id","push","store","commit","Store","state","userProfile","posts","mutations","setUserProfile","val","setPerformingRequest","performingRequest","setPosts","actions","login","form","dispatch","auth","signInWithEmailAndPassword","email","password","user","signup","createUserWithEmailAndPassword","usersCollection","uid","set","name","title","fetchUserProfile","get","currentRoute","path","logout","signOut","createPost","add","createdOn","Date","content","userId","currentUser","userName","comments","likes","likePost","docId","likesCollection","exists","postId","update","likesCount","updateProfile","userRef","where","postDocs","commentsCollection","commentDocs"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport * as fb from '../firebase'\nimport router from '../router/index'\n\nVue.use(Vuex)\n\n// realtime firebase\nfb.postsCollection.orderBy('createdOn', 'desc').onSnapshot(snapshot => {\n  let postsArray = []\n\n  snapshot.forEach(doc => {\n    let post = doc.data()\n    post.id = doc.id\n\n    postsArray.push(post)\n  })\n\n  store.commit('setPosts', postsArray)\n})\n\nconst store = new Vuex.Store({\n  state: {\n    userProfile: {},\n    posts: []\n  },\n  mutations: {\n    setUserProfile(state, val) {\n      state.userProfile = val\n    },\n    setPerformingRequest(state, val) {\n      state.performingRequest = val\n    },\n    setPosts(state, val) {\n      state.posts = val\n    }\n  },\n  actions: {\n    async login({ dispatch }, form) {\n      // sign user in\n      const { user } = await fb.auth.signInWithEmailAndPassword(form.email, form.password)\n\n      // fetch user profile and set in state\n      dispatch('fetchUserProfile', user)\n    },\n    async signup({ dispatch }, form) {\n      // sign user up\n      const { user } = await fb.auth.createUserWithEmailAndPassword(form.email, form.password)\n\n      // create user object in userCollections\n      await fb.usersCollection.doc(user.uid).set({\n        name: form.name,\n        title: form.title\n      })\n\n      // fetch user profile and set in state\n      dispatch('fetchUserProfile', user)\n    },\n    async fetchUserProfile({ commit }, user) {\n      // fetch user profile\n      const userProfile = await fb.usersCollection.doc(user.uid).get()\n\n      // set user profile in state\n      commit('setUserProfile', userProfile.data())\n\n      // change route to dashboard\n      if (router.currentRoute.path === '/login') {\n        router.push('/')\n      }\n    },\n    async logout({ commit }) {\n      // log user out\n      await fb.auth.signOut()\n\n      // clear user data from state\n      commit('setUserProfile', {})\n\n      // redirect to login view\n      router.push('/login')\n    },\n    async createPost({ state, commit }, post) {\n      // create post in firebase\n      await fb.postsCollection.add({\n        createdOn: new Date(),\n        content: post.content,\n        userId: fb.auth.currentUser.uid,\n        userName: state.userProfile.name,\n        comments: 0,\n        likes: 0\n      })\n    },\n    async likePost ({ commit }, post) {\n      const userId = fb.auth.currentUser.uid\n      const docId = `${userId}_${post.id}`\n\n      // check if user has liked post\n      const doc = await fb.likesCollection.doc(docId).get()\n      if (doc.exists) { return }\n\n      // create post\n      await fb.likesCollection.doc(docId).set({\n        postId: post.id,\n        userId: userId\n      })\n\n      // update post likes count\n      fb.postsCollection.doc(post.id).update({\n        likes: post.likesCount + 1\n      })\n    },\n    async updateProfile({ dispatch }, user) {\n      const userId = fb.auth.currentUser.uid\n      // update user object\n      const userRef = await fb.usersCollection.doc(userId).update({\n        name: user.name,\n        title: user.title\n      })\n\n      dispatch('fetchUserProfile', { uid: userId })\n\n      // update all posts by user\n      const postDocs = await fb.postsCollection.where('userId', '==', userId).get()\n      postDocs.forEach(doc => {\n        fb.postsCollection.doc(doc.id).update({\n          userName: user.name\n        })\n      })\n\n      // update all comments by user\n      const commentDocs = await fb.commentsCollection.where('userId', '==', userId).get()\n      commentDocs.forEach(doc => {\n        fb.commentsCollection.doc(doc.id).update({\n          userName: user.name\n        })\n      })\n    }\n  }\n})\n\nexport default store\n"]}]}