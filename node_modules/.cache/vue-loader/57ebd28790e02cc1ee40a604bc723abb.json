{"remainingRequest":"/Users/kyletretina/Desktop/sofia/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kyletretina/Desktop/sofia/src/views/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kyletretina/Desktop/sofia/src/views/Dashboard.vue","mtime":1595436225012},{"path":"/Users/kyletretina/Desktop/sofia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kyletretina/Desktop/sofia/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kyletretina/Desktop/sofia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kyletretina/Desktop/sofia/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGNvbW1lbnRzQ29sbGVjdGlvbiB9IGZyb20gJ0AvZmlyZWJhc2UnCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCcKaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnCmltcG9ydCBDb21tZW50TW9kYWwgZnJvbSAnQC9jb21wb25lbnRzL0NvbW1lbnRNb2RhbCcKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIENvbW1lbnRNb2RhbAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBvc3Q6IHsKICAgICAgICBjb250ZW50OiAnJwogICAgICB9LAogICAgICBzaG93Q29tbWVudE1vZGFsOiBmYWxzZSwKICAgICAgc2VsZWN0ZWRQb3N0OiB7fSwKICAgICAgc2hvd1Bvc3RNb2RhbDogZmFsc2UsCiAgICAgIGZ1bGxQb3N0OiB7fSwKICAgICAgcG9zdENvbW1lbnRzOiBbXQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcFN0YXRlKFsndXNlclByb2ZpbGUnLCAncG9zdHMnXSkKICB9LAogIG1ldGhvZHM6IHsKICAgIGNyZWF0ZVBvc3QoKSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdjcmVhdGVQb3N0JywgeyBjb250ZW50OiB0aGlzLnBvc3QuY29udGVudCB9KQogICAgICB0aGlzLnBvc3QuY29udGVudCA9ICcnCiAgICB9LAogICAgdG9nZ2xlQ29tbWVudE1vZGFsKHBvc3QpIHsKICAgICAgdGhpcy5zaG93Q29tbWVudE1vZGFsID0gIXRoaXMuc2hvd0NvbW1lbnRNb2RhbAogICAgICAvLyBpZiBvcGVuaW5nIG1vZGFsIHNldCBzZWxlY3RlZFBvc3QsIGVsc2UgY2xlYXIKICAgICAgaWYgKHRoaXMuc2hvd0NvbW1lbnRNb2RhbCkgewogICAgICAgIHRoaXMuc2VsZWN0ZWRQb3N0ID0gcG9zdAogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuc2VsZWN0ZWRQb3N0ID0ge30KICAgICAgfQogICAgfSwKICAgIGxpa2VQb3N0KGlkLCBsaWtlc0NvdW50KSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdsaWtlUG9zdCcsIHsgaWQsIGxpa2VzQ291bnQgfSkKICAgIH0sCiAgICBhc3luYyB2aWV3UG9zdChwb3N0KSB7CiAgICAgIGNvbnN0IGRvY3MgPSBhd2FpdCBjb21tZW50c0NvbGxlY3Rpb24ud2hlcmUoJ3Bvc3RJZCcsICc9PScsIHBvc3QuaWQpLmdldCgpCiAgICAgIGRvY3MuZm9yRWFjaChkb2MgPT4gewogICAgICAgIGxldCBjb21tZW50ID0gZG9jLmRhdGEoKQogICAgICAgIGNvbW1lbnQuaWQgPSBkb2MuaWQKICAgICAgICB0aGlzLnBvc3RDb21tZW50cy5wdXNoKGNvbW1lbnQpCiAgICAgIH0pCiAgICAgIHRoaXMuZnVsbFBvc3QgPSBwb3N0CiAgICAgIHRoaXMuc2hvd1Bvc3RNb2RhbCA9IHRydWUKICAgIH0sCiAgICBjbG9zZVBvc3RNb2RhbCgpIHsKICAgICAgdGhpcy5wb3N0Q29tbWVudHMgPSBbXQogICAgICB0aGlzLnNob3dQb3N0TW9kYWwgPSBmYWxzZQogICAgfQogIH0sCiAgZmlsdGVyczogewogICAgZm9ybWF0RGF0ZSh2YWwpIHsKICAgICAgaWYgKCF2YWwpIHsgcmV0dXJuICctJyB9CiAgICAgIGxldCBkYXRlID0gdmFsLnRvRGF0ZSgpCiAgICAgIHJldHVybiBtb21lbnQoZGF0ZSkuZnJvbU5vdygpCiAgICB9LAogICAgdHJpbUxlbmd0aCh2YWwpIHsKICAgICAgaWYgKHZhbC5sZW5ndGggPCAyMDApIHsgcmV0dXJuIHZhbCB9CiAgICAgIHJldHVybiBgJHt2YWwuc3Vic3RyaW5nKDAsIDIwMCl9Li4uYAogICAgfQogIH0KfQo="},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"dashboard\">\n    <transition name=\"fade\">\n      <CommentModal v-if=\"showCommentModal\" :post=\"selectedPost\" @close=\"toggleCommentModal()\"></CommentModal>\n    </transition>\n    <section>\n      <div class=\"col1\">\n        <div class=\"profile\">\n          <h5>Hello, {{ userProfile.name }}</h5>\n          <p>from {{ userProfile.title }}</p>\n          <div class=\"create-post\">\n            <form @submit.prevent>\n              <textarea v-model.trim=\"post.content\" placeholder=\"If you have feedback or advice for improving SOFIA, please create a post here.\"></textarea>\n              <button @click=\"createPost()\" :disabled=\"post.content === ''\" class=\"button\">post</button>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div class=\"col2\">\n        <div v-if=\"posts.length\">\n          <div v-for=\"post in posts\" :key=\"post.id\" class=\"post\">\n            <h5>{{ post.userName }}</h5>\n            <span>{{ post.createdOn | formatDate }}</span>\n            <p>{{ post.content | trimLength }}</p>\n            <ul>\n              <li><a @click=\"toggleCommentModal(post)\">comments {{ post.comments }}</a></li>\n              <li><a @click=\"likePost(post.id, post.likes)\">likes {{ post.likes }}</a></li>\n              <li><a @click=\"viewPost(post)\">view full post</a></li>\n            </ul>\n          </div>\n        </div>\n        <div v-else>\n          <p class=\"no-results\">There are currently no posts</p>\n        </div>\n      </div>\n    </section>\n\n    <!-- full post modal -->\n    <transition name=\"fade\">\n      <div v-if=\"showPostModal\" class=\"p-modal\">\n        <div class=\"p-container\">\n          <a @click=\"closePostModal()\" class=\"close\">close</a>\n          <div class=\"post\">\n            <h5>{{ fullPost.userName }}</h5>\n            <span>{{ fullPost.createdOn | formatDate }}</span>\n            <p>{{ fullPost.content }}</p>\n            <ul>\n              <li><a>comments {{ fullPost.comments }}</a></li>\n              <li><a>likes {{ fullPost.likes }}</a></li>\n            </ul>\n          </div>\n          <div v-show=\"postComments.length\" class=\"comments\">\n            <div v-for=\"comment in postComments\" :key=\"comment.id\" class=\"comment\">\n              <p>{{ comment.userName }}</p>\n              <span>{{ comment.createdOn | formatDate }}</span>\n              <p>{{ comment.content }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport { commentsCollection } from '@/firebase'\nimport { mapState } from 'vuex'\nimport moment from 'moment'\nimport CommentModal from '@/components/CommentModal'\nexport default {\n  components: {\n    CommentModal\n  },\n  data() {\n    return {\n      post: {\n        content: ''\n      },\n      showCommentModal: false,\n      selectedPost: {},\n      showPostModal: false,\n      fullPost: {},\n      postComments: []\n    }\n  },\n  computed: {\n    ...mapState(['userProfile', 'posts'])\n  },\n  methods: {\n    createPost() {\n      this.$store.dispatch('createPost', { content: this.post.content })\n      this.post.content = ''\n    },\n    toggleCommentModal(post) {\n      this.showCommentModal = !this.showCommentModal\n      // if opening modal set selectedPost, else clear\n      if (this.showCommentModal) {\n        this.selectedPost = post\n      } else {\n        this.selectedPost = {}\n      }\n    },\n    likePost(id, likesCount) {\n      this.$store.dispatch('likePost', { id, likesCount })\n    },\n    async viewPost(post) {\n      const docs = await commentsCollection.where('postId', '==', post.id).get()\n      docs.forEach(doc => {\n        let comment = doc.data()\n        comment.id = doc.id\n        this.postComments.push(comment)\n      })\n      this.fullPost = post\n      this.showPostModal = true\n    },\n    closePostModal() {\n      this.postComments = []\n      this.showPostModal = false\n    }\n  },\n  filters: {\n    formatDate(val) {\n      if (!val) { return '-' }\n      let date = val.toDate()\n      return moment(date).fromNow()\n    },\n    trimLength(val) {\n      if (val.length < 200) { return val }\n      return `${val.substring(0, 200)}...`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n</style>"]}]}