{"remainingRequest":"/Users/kyletretina/Desktop/sofia/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kyletretina/Desktop/sofia/src/components/CommentModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kyletretina/Desktop/sofia/src/components/CommentModal.vue","mtime":1594596189689},{"path":"/Users/kyletretina/Desktop/sofia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kyletretina/Desktop/sofia/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kyletretina/Desktop/sofia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kyletretina/Desktop/sofia/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGNvbW1lbnRzQ29sbGVjdGlvbiwgcG9zdHNDb2xsZWN0aW9uLCBhdXRoIH0gZnJvbSAnQC9maXJlYmFzZScKCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogWydwb3N0J10sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbW1lbnQ6ICcnCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBhZGRDb21tZW50KCkgewogICAgICAvLyBjcmVhdGUgY29tbWVudAogICAgICBhd2FpdCBjb21tZW50c0NvbGxlY3Rpb24uYWRkKHsKICAgICAgICBjcmVhdGVkT246IG5ldyBEYXRlKCksCiAgICAgICAgY29udGVudDogdGhpcy5jb21tZW50LAogICAgICAgIHBvc3RJZDogdGhpcy5wb3N0LmlkLAogICAgICAgIHVzZXJJZDogYXV0aC5jdXJyZW50VXNlci51aWQsCiAgICAgICAgdXNlck5hbWU6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXJQcm9maWxlLm5hbWUKICAgICAgfSkKCiAgICAgIC8vIHVwZGF0ZSBjb21tZW50IGNvdW50IG9uIHBvc3QKICAgICAgYXdhaXQgcG9zdHNDb2xsZWN0aW9uLmRvYyh0aGlzLnBvc3QuaWQpLnVwZGF0ZSh7CiAgICAgICAgY29tbWVudHM6IHBhcnNlSW50KHRoaXMucG9zdC5jb21tZW50cykgKyAxCiAgICAgIH0pCgogICAgICAvLyBjbG9zZSBtb2RhbAogICAgICB0aGlzLiRlbWl0KCdjbG9zZScpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["CommentModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"CommentModal.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"c-modal\">\n    <div class=\"c-container\">\n      <a @click=\"$emit('close')\">close</a>\n      <p>add a comment</p>\n      <form @submit.prevent>\n        <textarea v-model.trim=\"comment\"></textarea>\n        <button @click=\"addComment()\" :disabled=\"comment == ''\" class=\"button\">add comment</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { commentsCollection, postsCollection, auth } from '@/firebase'\n\nexport default {\n  props: ['post'],\n  data() {\n    return {\n      comment: ''\n    }\n  },\n  methods: {\n    async addComment() {\n      // create comment\n      await commentsCollection.add({\n        createdOn: new Date(),\n        content: this.comment,\n        postId: this.post.id,\n        userId: auth.currentUser.uid,\n        userName: this.$store.state.userProfile.name\n      })\n\n      // update comment count on post\n      await postsCollection.doc(this.post.id).update({\n        comments: parseInt(this.post.comments) + 1\n      })\n\n      // close modal\n      this.$emit('close')\n    }\n  }\n}\n</script>\n"]}]}